<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 						http://www.springframework.org/schema/beans/spring-beans.xsd 
 						http://www.springframework.org/schema/context 
 						http://www.springframework.org/schema/context/spring-context.xsd 
 						http://www.springframework.org/schema/aop 
 						http://www.springframework.org/schema/aop/spring-aop.xsd 
 						http://www.springframework.org/schema/mvc  
 						http://www.springframework.org/schema/mvc/spring-mvc.xsd" >

    <!-- 自动扫描,使SpringMVC认为包下用了@Controller注解的类是控制器 -->
    <context:component-scan base-package="cn.cofco.cpmp.controller"/>
    <!-- 扩充了注解驱动,可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven/>
    <!-- 静态资源处理 css js imgs -->
    <mvc:resources location="/resources/**" mapping="/resources"/>

    <mvc:interceptors>
        <mvc:interceptor>
            <!--cas操作步骤 添加拦截器-->
            <mvc:mapping path="/**"/>
            <bean id="loginInterceptor" class="cn.cofco.cpmp.utils.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <mvc:interceptors>
        <mvc:interceptor>
            <!--供应商账户  添加拦截器-->
            <mvc:mapping path="/**"/>
            <bean id="splrLoginInterceptor" class="cn.cofco.cpmp.utils.interceptor.SplrLoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能,完成请求和注解POJO的映射 -->
    <bean id="fastJsonHttpMessageConverter"
          class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>10000000</value>
        </property>
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <bean
            class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration"
            id="swagger2Config"/>
    <mvc:resources location="classpath:/META-INF/resources/"
                   mapping="swagger-ui.html"/>
    <mvc:resources location="classpath:/META-INF/resources/webjars/"
                   mapping="/webjars/**"/>

    <!-- 跨域配置，上线后可删除 -->
    <mvc:cors>
        <mvc:mapping path="/**" allowed-origins="*"
                     allow-credentials="true" max-age="1800" allowed-methods="GET,POST,OPTIONS"/>
    </mvc:cors>
</beans>